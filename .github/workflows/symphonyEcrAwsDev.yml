name: Docker Image CI

on:
  push:
    branches: 
      - develop

env: 
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY_DEV: ${{ secrets.ECR_REPOSITORY_DEV }}
  ECR_REPOSITORY_PROD: ${{ secrets.ECR_REPOSITORY_PROD }}
  EMEAIL_GIT: javiermartinezgi01@gmail.com
  USER_NAME_GIT: javiermartinezgi01
jobs:

  build-artifact:
    
    name: build ${{ matrix.image }}
    runs-on: ubuntu-latest
    outputs:
      update: ${{ steps.step-to-true.outputs.condition }}

    strategy:
      matrix:
        include:
          - image: graph
            context: .
            file: graph/Dockerfile
            version-file: graph/
          - image: admin
            context: .
            file: admin/Dockerfile
            version-file: admin/
          - image: async
            context: .
            file: async/Dockerfile
            version-file: async/
          - image: store
            context: .
            file: store/Dockerfile
            version-file: store/
          - image: migrate
            context: .
            file: migrate/Dockerfile
            version-file: migrate/
          - image: jobrunner
            context: .
            file: jobrunner/Dockerfile
            version-file: jobrunner/
          - image: front
            context: app
            file: app/fbcnms-projects/platform-server/Dockerfile.prod
            version-file: app/fbcnms-projects/platform-server/
          - image: docs
            context: docs
            file: docs/Dockerfile
            version-file: docs/
          - image: storybook
            context: app
            file: app/fbcnms-projects/storybook/Dockerfile
            version-file: app/fbcnms-projects/storybook/

    steps:
      - uses: actions/checkout@v2

      - name: Extracting version
        run: echo "ACTUAL=${{ matrix.image }}-v$(cat ${{ matrix.version-file }}version.yml | sed 's/version//g' | sed 's/://g' | sed 's/ //g')" >> $GITHUB_ENV

      - name: Configure AWS Credentials for build and deploy ECR 42
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Login ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Getting Lastest version in ECR
        run: echo "LATEST=$(aws ecr list-images --repository-name $ECR_REPOSITORY_DEV | jq '.imageIds | map (.imageTag) | .[]' | grep ${{ matrix.image }} | sed 's/"//g' | tail -n 1)" >> $GITHUB_ENV

      - name: Showing Variables
        run: |
          echo "Latest " ${{ env.LATEST}}
          echo "Actual " ${{ env.ACTUAL}}

      - id: step-to-true
        name: Setting estatus to true
        if : ${{ env.LATEST!=env.ACTUAL }}
        run: echo "::set-output name=condition::true"
        

      - name: Showing condition
        run: echo ${{ steps.step-to-true.outputs.condition }}
        
      
      - name: Docker build and Push ECR AWS DEV
        if : ${{ env.LATEST!=env.ACTUAL }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_DEV }}:${{ env.ACTUAL}}
          pull: true
          push: true

      # - name: Disable workflow commands
      #   if : ${{ needs.build-artifact.outputs.update != 'true' }}
      #   run: |
      #     echo "::error::You did not change the version in any component  "
      #     stopStrategy=$(docker/build-push-action@v2)
      #     echo "::stop-commands::$stopStrategy"

  validate:

    needs: build-artifact
    if : ${{ needs.build-artifact.outputs.update != 'true' }}
    name: Update image tag in values.yaml
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Disable workflow commands
        if : ${{ needs.build-artifact.outputs.update != 'true' }}
        run: |
          echo "::error::You did not change the version in any component  "
          stopStrategy=$(actions/checkout@v3)
          echo "::stop-commands::$stopStrategy"
  

  updating-values:

    needs: build-artifact
    if : ${{ needs.build-artifact.outputs.update == 'true' }}
    name: Update image tag in values.yaml
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Clone repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: 'javiermartinezgi01'
          repository: 'repoTest'
          access-token: ${{ secrets.GIT_HUB_TOKEN }}
      - name: ejecucion de script
        run : |
              bash script_change_values.sh

      - name: push repo github
        run: |
          cd repoTest
          git config user.email "${{env.EMAIL_GIT}}"
          git config user.name "${{env.USER_NAME_GIT}}"
          git add values.yaml
          git commit -m "actualizacion values"
          git push origin main   
            